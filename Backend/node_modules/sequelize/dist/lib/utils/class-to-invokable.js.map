{
  "version": 3,
  "sources": ["../../../lib/utils/class-to-invokable.js"],
  "sourcesContent": ["'use strict';\n\n/**\n * Wraps a constructor to not need the `new` keyword using a proxy.\n * Only used for data types.\n *\n * @param {Function} Class The class instance to wrap as invocable.\n * @returns {Proxy} Wrapped class instance.\n * @private\n */\nfunction classToInvokable(Class) {\n  return new Proxy(Class, {\n    apply(Target, thisArg, args) {\n      return new Target(...args);\n    },\n    construct(Target, args) {\n      return new Target(...args);\n    },\n    get(target, p) {\n      return target[p];\n    }\n  });\n}\nexports.classToInvokable = classToInvokable;\n"],
  "mappings": ";AAUA,0BAA0B,OAAO;AAC/B,SAAO,IAAI,MAAM,OAAO;AAAA,IACtB,MAAM,QAAQ,SAAS,MAAM;AAC3B,aAAO,IAAI,OAAO,GAAG;AAAA;AAAA,IAEvB,UAAU,QAAQ,MAAM;AACtB,aAAO,IAAI,OAAO,GAAG;AAAA;AAAA,IAEvB,IAAI,QAAQ,GAAG;AACb,aAAO,OAAO;AAAA;AAAA;AAAA;AAIpB,QAAQ,mBAAmB;",
  "names": []
}
